{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","className","type","value","onChange","actualValue","target","onClick","getGifts","category","a","url","encodeURI","fetch","response","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GiftGrid","setImages","useEffect","then","imgs","GiftExpertApp","cat","ReactDOM","render","document","getElementById"],"mappings":"mMA2BaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC5B,EAAoCC,mBAAS,kCAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAsBA,OACE,uBAAMC,SAda,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAY,SAACS,GAAD,OAAkBP,GAAlB,mBAAkCO,OAC9CN,EAAc,MAUhB,UACE,oBAAIO,UAAU,wCAAd,8CACA,uBAAOC,KAAK,OAAOC,MAAOV,EAAYW,SAtBtB,SAACR,GACnB,IAAMS,EAAcT,EAAEU,OAAOH,MAC7BT,EAAcW,IAoBkDE,QAR3C,WACrBb,EAAc,W,+BC7CLc,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UACpDH,GAFoB,+DAICI,MAAMF,GAJP,cAIhBG,EAJgB,gBAKCA,EAASC,OALV,uBAKdC,EALc,EAKdA,KAEFC,EAAQD,EAAKE,KAAI,SAACC,GACtB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXf,kBAefM,GAfe,4CAAH,sDCCRO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,sBAAKV,UAAU,8CAAf,UACE,qBAAKwB,IAAKd,EAAKe,IAAKL,IACpB,4BAAIA,QCuBGM,EAAW,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SACzB,EAA4BjB,mBAAS,IAArC,mBAAO8B,EAAP,KAAeM,EAAf,KAQA,OALAC,qBAAU,WACRrB,EAASC,GAAUqB,MAAK,SAACC,GAAD,OAAUH,EAAUG,QAC3C,CAACtB,IAIF,qCACE,6BAAKA,IAEL,qBAAKR,UAAU,YAAf,SACGqB,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aCZnBY,EAAgB,WAG3B,MAAgCxC,mBAAS,CAAC,mBAA1C,mBAAOiB,EAAP,KAAiBlB,EAAjB,KAWA,OACE,qCACE,gDACA,cAAC,EAAD,CAAaA,YAAaA,IAC1B,uBACA,6BACGkB,EAASS,KAAI,SAACe,GAAD,OACZ,cAAC,EAAD,CAAUxB,SAAUwB,GAAUA,Y,YChDxCC,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.254bc4a1.chunk.js","sourcesContent":["/* import React, { useState } from \"react\";\r\nimport Proptypes from \"prop-types\";\r\nimport { addComments } from \"@babel/types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\" \");\r\n\r\n  const handleChange = (e) => setInputValue(e.target.value);\r\n  const handleInputSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cat) => [...cat, inputValue]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleInputSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleChange} />\r\n    </form>\r\n  );\r\n};\r\nAddCategory.propTypes = {\r\n  setCategories: Proptypes.func.isRequired,\r\n}; */\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport const AddCategory = ({ setCategory }) => {\r\n  const [inputValue, setInputValue] = useState(\" Add New Series or Movies Here\");\r\n\r\n  //Maneja valor del input del componente AddCategory\r\n  const handleInput = (e) => {\r\n    const actualValue = e.target.value;\r\n    setInputValue(actualValue);\r\n  };\r\n\r\n  //Maneja el submit del input del componenete AddCategory\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategory((categories) => [ inputValue , ...categories]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  //Limpiar mensaje del Input luego del Click\r\n  const cleanInputMesage=()=>{\r\n    setInputValue(\"\");\r\n  }\r\n\r\n  //Renderiza AddCategory\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"animate__animated animate__rubberBand\">Add Serie or Movie  ⬇️</h2>\r\n      <input type=\"text\" value={inputValue} onChange={handleInput}  onClick={cleanInputMesage}/>\r\n    </form>\r\n  );\r\n};\r\n","// Llamado a la API\r\nexport const getGifts = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=12&api_key=9QceXYkgWnjljFQJMtf5uuBtnuWVFzNA`;\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n\r\n  const gifts = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifts;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card  animate__animated animate__backInLeft\" > \r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","/* import React from \"react\";\r\n\r\nexport const GiftGrid = ({ categories }) => {\r\n  const getGifts = async () => {\r\n    const url =\r\n      \"https://api.giphy.com/v1/gifs/search?api_key=9QceXYkgWnjljFQJMtf5uuBtnuWVFzNA&q=Rick and Morty&limit=10\";\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifts=data.map((img)=>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images.downsized_medium.url\r\n        }\r\n    })\r\n    console.log(data);\r\n  };\r\n  getGifts();\r\n  return (\r\n    <>\r\n      <li>{categories}</li>\r\n    </>\r\n  );\r\n}; */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { getGifts } from \"../helpers/getGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n  const [images, setImages] = useState([]);\r\n\r\n  // useEffect es utilizado en esta oportunidad para evitar duplicar la renderizacion al actualizar componente\r\n  useEffect(() => {\r\n    getGifts(category).then((imgs) => setImages(imgs));\r\n  }, [category]); // pasar como segundo parametro array vacio hace que se ejecute esa instruccion sólo cuando el componente es renderizado por primera vez.\r\n\r\n  //Renderiza las categorías\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","/* import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GiftGrid } from \"./components/GiftGrid\";\r\n\r\nexport const GiftExpertApp = () => {\r\n  //const categories = [\"Rick and Morty\", \"The Simpsons\", \"Friends\"];\r\n  const [categories, setCategories] = useState([\"Rick and Morty\"]); */\r\n\r\n/*  const handleAdd = () => {\r\n    const extra = \"Football Match\";\r\n    setCategories([...categories, extra ]);\r\n  }; */\r\n\r\n/*   return (\r\n    <>\r\n      <h2>Gift Expert App</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((categories) => //<li key={categories}>{categories}</li>\r\n          <GiftGrid categories={categories} key={categories}/>\r\n        )}\r\n      </ol>\r\n    </>\r\n  );\r\n}; */\r\n//cd Desktop\\Curso Fernando Herrera\\React\\04-gif-expert-app\r\n\r\nimport React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GiftGrid } from \"./components/GiftGrid\";\r\n\r\nexport const GiftExpertApp = () => {\r\n  // Categorías\r\n\r\n  const [category, setCategory] = useState([\"Rick and Morty\"]);\r\n  //Agregar categorías\r\n/*   const handleAddCategories = () => {\r\n    const inputCat = document.querySelector(\"#newCategory\");\r\n\r\n    setCategory([...category, inputCat.value]);\r\n  \r\n  }; */\r\n\r\n  // Se renderiza las categorías desde el componente GifGrid\r\n\r\n  return (\r\n    <>\r\n      <h1>Gif Expert App</h1>\r\n      <AddCategory setCategory={setCategory} />\r\n      <hr></hr>\r\n      <ol>\r\n        {category.map((cat) => (\r\n          <GiftGrid category={cat} key={cat} />\r\n        ))}\r\n      </ol>\r\n      {/* <input id=\"newCategory\"></input> */}\r\n      {/* <button onClick={handleAddCategories}>ADD Categorie</button> */}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GiftExpertApp } from \"./GiftExpertApp\";\nimport \"./index.css\";\nimport 'animate.css'\nReactDOM.render(<GiftExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}